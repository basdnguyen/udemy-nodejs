{"version":3,"sources":["components/Base/index.tsx","components/Column/index.tsx","components/Row/index.tsx","components/Input/index.tsx","components/Link/index.tsx","components/LinkIcon/index.tsx","components/Button/index.tsx","components/ButtonOutline/index.tsx","components/ButtonFilled/index.tsx","SignUp/index.tsx","LogIn/index.tsx","TopBar/index.tsx","Head/index.tsx","components/Text/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Base","element","children","css","props","Element","Column","display","flexDirection","Row","Input","border","outline","Link","theme","useTheme","color","padding","borderRadius","fontSize","backgroundColor","cursor","colors","fade","LinkIcon","width","height","boxSizing","alignItems","justifyContent","Button","fontWeight","ButtonOutline","ButtonFilled","SIGN_UP","gql","SignUp","onClose","onSuccess","useMutation","signUp","loading","error","data","message","token","position","top","left","bottom","right","borderBottom","onClick","size","initialValues","name","email","password","onSubmit","values","variables","render","handleChange","placeholder","value","onChange","type","marginTop","LOG_IN","LogIn","useLazyQuery","logIn","GET_CURRENT_USER","TopBar","React","useState","isOpenSignUp","setIsOpenSignUp","isOpenLogIn","setIsOpenLogIn","useQuery","refetch","marginRight","src","alt","data-purpose","flexGrow","alignSelf","primary","marginLeft","margin","currentUser","bind","localStorage","removeItem","setItem","Head","Helmet","rel","href","sizes","Text","App","minHeight","backgroundImage","lineHeight","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","background","Boolean","window","location","hostname","match","httpLink","createHttpLink","uri","authLink","setContext","_","headers","getItem","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5631af75.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, InterpolationWithTheme } from \"@emotion/core\";\nimport * as React from \"react\";\n\nexport interface Props {\n  css?: InterpolationWithTheme<any>;\n  element?: keyof JSX.IntrinsicElements;\n}\n\nconst Base: React.FC<Props> = ({ element = \"div\", children, css, ...props }) => {\n  const Element = element as any;\n  return <Element css={css} children={children} {...props} />;\n}\n\nexport default Base;\n","import * as React from \"react\";\nimport Base from \"../Base\";\n\nconst Column: React.FC<JSX.IntrinsicAttributes> = ({ children, css }) => {\n  return (\n    <Base\n      css={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        ...(css as any)\n      }}\n    >\n      {children}\n    </Base>\n  );\n};\n\nexport default Column;\n","import * as React from \"react\";\nimport Base from \"../Base\";\n\nconst Row: React.FC<JSX.IntrinsicAttributes> = ({ children, css }) => {\n  return (\n    <Base\n      css={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        ...(css as any)\n      }}\n    >\n      {children}\n    </Base>\n  );\n};\n\nexport default Row;\n","import React, { InputHTMLAttributes } from \"react\";\nimport Base from \"../Base\";\n\nconst Input: React.FC<InputHTMLAttributes<HTMLInputElement>> = ({\n  children,\n  css,\n  ...props\n}) => {\n  return (\n    <Base\n      element=\"input\"\n      css={{\n        border: 0,\n        \"&:focus\": {\n          outline: \"none\"\n        },\n        ...(css as any)\n      }}\n      {...props}\n    >\n      {children}\n    </Base>\n  );\n};\n\nexport default Input;\n","import React, { AnchorHTMLAttributes } from \"react\";\nimport Base from \"../Base\";\nimport { Theme } from \"../../Theme\";\nimport { useTheme } from \"emotion-theming\";\n\nconst Link: React.FC<AnchorHTMLAttributes<HTMLAnchorElement>> = ({\n  children,\n  css,\n  ...props\n}) => {\n  const theme: Theme = useTheme();\n  return (\n    <Base\n      element=\"a\"\n      css={{\n        color: \"#686f7a\",\n        padding: \"12px 15px\",\n        border: \"1px solid transparent\",\n        borderRadius: \"2px\",\n        fontSize: \"14px\",\n        \"&:hover\": {\n          backgroundColor: \"#f2f3f5\",\n          cursor: \"pointer\",\n          border: `1px solid ${theme.colors.fade}`\n        },\n        ...(css as any)\n      }}\n      {...props}\n    >\n      {children}\n    </Base>\n  );\n};\n\nexport default Link;\n","import React, { AnchorHTMLAttributes } from \"react\";\nimport Base from \"../Base\";\nimport { Theme } from \"../../Theme\";\nimport { useTheme } from \"emotion-theming\";\n\nconst LinkIcon: React.FC<AnchorHTMLAttributes<HTMLAnchorElement>> = ({\n  children,\n  css,\n  ...props\n}) => {\n  const theme: Theme = useTheme();\n  return (\n    <Base\n      element=\"a\"\n      css={{\n        width: \"44px\",\n        height: \"44px\",\n        color: \"#686f7a\",\n        padding: \"12px\",\n        border: \"1px solid transparent\",\n        borderRadius: \"50%\",\n        boxSizing: \"border-box\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        \"&:hover\": {\n          backgroundColor: \"#f2f3f5\",\n          cursor: \"pointer\",\n          border: `1px solid ${theme.colors.fade}`\n        },\n        ...(css as any)\n      }}\n      {...props}\n    >\n      {children}\n    </Base>\n  );\n};\n\nexport default LinkIcon;\n","import React, { ButtonHTMLAttributes } from \"react\";\nimport Base from \"../Base\";\n\nconst Button: React.FC<ButtonHTMLAttributes<HTMLButtonElement>> = ({\n  children,\n  css,\n  ...props\n}) => {\n  return (\n    <Base\n      element=\"button\"\n      css={{\n        borderRadius: \"2px\",\n        fontWeight: 600,\n        fontSize: \"16px\",\n        padding: \"12px\",\n        cursor: \"pointer\",\n        border: \"none\",\n        \"&:focus\": {\n          outline: \"0\"\n        },\n        ...(css as any)\n      }}\n      {...props}\n    >\n      {children}\n    </Base>\n  );\n};\n\nexport default Button;\n","import React, { ButtonHTMLAttributes } from \"react\";\nimport Button from \"../Button\";\n\nconst ButtonOutline: React.FC<ButtonHTMLAttributes<HTMLButtonElement>> = ({ children, css, ...props }) => {\n  return <Button\n    css={{\n      backgroundColor: \"rgba(0, 0, 0, 0)\",\n      border: \"1px solid #686f7a\",\n      color: \"#686f7a\",\n      ...css as any,\n    }} {...props}>\n      {children}\n    </Button>;\n};\n\nexport default ButtonOutline;\n","import React, { ButtonHTMLAttributes } from \"react\";\nimport Button from \"../Button\";\n\nconst ButtonFilled: React.FC<ButtonHTMLAttributes<HTMLButtonElement>> = ({\n  children,\n  css,\n  ...props\n}) => {\n  return (\n    <Button\n      css={{\n        backgroundColor: \"#ec5252\",\n        color: \"white\",\n        border: 0,\n        \"&:hover\": {\n          backgroundColor: \"#c24242\"\n        },\n        \"&:active\": {\n          backgroundColor: \"#852a2a\"\n        },\n        ...(css as any)\n      }}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default ButtonFilled;\n","import { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { Form, Formik, FormikValues } from \"formik\";\nimport * as React from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\nimport ButtonFilled from \"../components/ButtonFilled\";\nimport Input from \"../components/Input\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Button from \"../components/Button\";\n\nconst SIGN_UP = gql`\n  mutation($name: String!, $email: String!, $password: String!) {\n    token: signup(name: $name, email: $email, password: $password)\n  }\n`;\n\nexport interface Props {\n  onClose: () => void;\n  onSuccess: (token: string) => void;\n}\n\nconst SignUp: React.FC<Props> = ({ onClose, onSuccess }) => {\n  const [signUp, { loading, error, data }] = useMutation(SIGN_UP);\n  if (loading) {\n    return <span>Loading...</span>;\n  }\n  if (error) {\n    return <span>{error.message}</span>;\n  }\n  if (data) {\n    onSuccess(data.token);\n  }\n  function onSubmit(values: FormikValues) {\n    signUp({ variables: { ...values } });\n  }\n  return (\n    <Column\n      css={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }}\n    >\n      <Column\n        css={{ backgroundColor: \"white\", width: \"380px\", borderRadius: \"5px\" }}\n      >\n        <Row\n          css={{\n            justifyContent: \"space-between\",\n            padding: \"24px\",\n            alignItems: \"center\",\n            borderBottom: \"1px solid #686f7a\"\n          }}\n        >\n          Sign Up and Start Learning!\n          <Button css={{ padding: \"0\" }} onClick={onClose}>\n            <FaTimes size=\"1.5rem\" color=\"#686f7a\" />\n          </Button>\n        </Row>\n        <Formik\n          initialValues={{ name: \"\", email: \"\", password: \"\" }}\n          onSubmit={onSubmit}\n          render={({ values, handleChange }) => (\n            <Form>\n              <Column css={{ padding: \"24px\" }}>\n                <Input\n                  placeholder=\"Full Name\"\n                  name=\"name\"\n                  value={values.name}\n                  onChange={handleChange}\n                  css={{\n                    padding: \"12px 40px\",\n                    fontSize: \"18px\",\n                    border: \"1px solid #686f7a\",\n                    borderRadius: \"3px\"\n                  }}\n                />\n                <Input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  css={{\n                    padding: \"12px 40px\",\n                    fontSize: \"18px\",\n                    marginTop: \"6px\",\n                    border: \"1px solid #686f7a\",\n                    borderRadius: \"3px\"\n                  }}\n                />\n                <Input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  css={{\n                    padding: \"12px 40px\",\n                    fontSize: \"18px\",\n                    marginTop: \"6px\",\n                    border: \"1px solid #686f7a\",\n                    borderRadius: \"3px\"\n                  }}\n                />\n                <ButtonFilled css={{ marginTop: \"6px\" }} type=\"submit\">\n                  Sign Up\n                </ButtonFilled>\n              </Column>\n            </Form>\n          )}\n        />\n      </Column>\n    </Column>\n  );\n};\n\nexport default SignUp;\n","import { useLazyQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { Form, Formik, FormikValues } from \"formik\";\nimport * as React from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\nimport ButtonFilled from \"../components/ButtonFilled\";\nimport Input from \"../components/Input\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Button from \"../components/Button\";\n\nconst LOG_IN = gql`\n  query($email: String!, $password: String!) {\n    token: login(email: $email, password: $password)\n  }\n`;\n\ninterface Props {\n  onClose: () => void;\n  onSuccess: (token: string) => void;\n}\n\nconst LogIn: React.FC<Props> = ({ onClose, onSuccess }) => {\n  const [logIn, { loading, error, data }] = useLazyQuery(LOG_IN);\n  if (loading) {\n    return <span>Loading...</span>;\n  }\n  if (error) {\n    return <span>{error.message}</span>;\n  }\n  if (data) {\n    onSuccess(data.token);\n  }\n  function onSubmit(values: FormikValues) {\n    logIn({ variables: { ...values } });\n  }\n  return (\n    <Column\n      css={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }}\n    >\n      <Column\n        css={{ backgroundColor: \"white\", width: \"380px\", borderRadius: \"5px\" }}\n      >\n        <Row\n          css={{\n            justifyContent: \"space-between\",\n            padding: \"24px\",\n            alignItems: \"center\",\n            borderBottom: \"1px solid #686f7a\"\n          }}\n        >\n          Log In to Your Udemy Account!\n          <Button css={{ padding: \"0\" }} onClick={onClose}>\n          <FaTimes size=\"1.5rem\" color=\"#686f7a\" />\n          </Button>\n        </Row>\n        <Formik\n          initialValues={{ name: \"\", email: \"\", password: \"\" }}\n          onSubmit={onSubmit}\n          render={({ values, handleChange }) => (\n            <Form>\n              <Column css={{ padding: \"24px\" }}>\n                <Input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  css={{\n                    padding: \"12px 40px\",\n                    fontSize: \"18px\",\n                    marginTop: \"6px\",\n                    border: \"1px solid #686f7a\",\n                    borderRadius: \"3px\"\n                  }}\n                />\n                <Input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  css={{\n                    padding: \"12px 40px\",\n                    fontSize: \"18px\",\n                    marginTop: \"6px\",\n                    border: \"1px solid #686f7a\",\n                    borderRadius: \"3px\"\n                  }}\n                />\n                <ButtonFilled css={{ marginTop: \"6px\" }} type=\"submit\">\n                  Log In\n                </ButtonFilled>\n              </Column>\n            </Form>\n          )}\n        />\n      </Column>\n    </Column>\n  );\n};\n\nexport default LogIn;\n","import React from \"react\";\nimport { FaSearch, FaShoppingCart } from \"react-icons/fa\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { useTheme } from \"emotion-theming\";\nimport { Theme } from \"../Theme\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport Input from \"../components/Input\";\nimport Link from \"../components/Link\";\nimport LinkIcon from \"../components/LinkIcon\";\nimport ButtonOutline from \"../components/ButtonOutline\";\nimport ButtonFilled from \"../components/ButtonFilled\";\nimport SignUp from \"../SignUp\";\nimport LogIn from \"../LogIn\";\n\nconst GET_CURRENT_USER = gql`\n  query {\n    currentUser {\n      id\n      name\n    }\n  }\n`;\n\nconst TopBar: React.FC = () => {\n  const theme = useTheme<Theme>();\n  const [isOpenSignUp, setIsOpenSignUp] = React.useState(false);\n  const [isOpenLogIn, setIsOpenLogIn] = React.useState(false);\n  const { loading, error, data, refetch } = useQuery(GET_CURRENT_USER);\n  function logout() {\n    localStorage.removeItem(\"token\");\n    refetch();\n  }\n  function onLogInSuccess(token: string) {\n    localStorage.setItem(\"token\", token);\n    setIsOpenLogIn(false);\n    refetch();\n  }\n  function onSignUpSuccess(token: string) {\n    localStorage.setItem(\"token\", token);\n    setIsOpenSignUp(false);\n    refetch();\n  }\n  return (\n    <Column\n      css={{\n        backgroundColor: \"white\",\n        height: \"64px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"stretch\",\n        padding: \"10px 20px\",\n        boxSizing: \"border-box\"\n      }}\n    >\n      <Column css={{ marginRight: \"16px\" }}>\n        <img\n          src=\"https://www.udemy.com/staticx/udemy/images/v6/logo-coral.svg\"\n          alt=\"Udemy\"\n          width=\"110\"\n          height=\"100%\"\n          data-purpose=\"udemy-brand-logo\"\n        ></img>\n      </Column>\n      <Row\n        css={{\n          flexGrow: 1,\n          alignItems: \"stretch\",\n          backgroundColor: \"#f2f3f5\",\n          border: \"1px solid transparent\",\n          borderRadius: \"2px\",\n          boxSizing: \"border-box\",\n          \"&:focus-within\": {\n            border: \"1px solid #686f7a\",\n            backgroundColor: \"transparent\"\n          }\n        }}\n      >\n        <Input\n          placeholder=\"Search for anything\"\n          css={{\n            padding: \"10px 12px\",\n            boxSizing: \"border-box\",\n            fontSize: \"14px\",\n            flexGrow: 1,\n            border: 0,\n            backgroundColor: \"transparent\"\n          }}\n        />\n        <Column\n          css={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignSelf: \"stretch\",\n            color: theme.colors.primary,\n            \"&:hover\": {\n              color: \"white\",\n              backgroundColor: theme.colors.primary\n            },\n            padding: \"0 14px\"\n          }}\n        >\n          <FaSearch size={\"1em\"} />\n        </Column>\n      </Row>\n      <Link css={{ marginLeft: \"15px\" }}>Teams and Enterprises</Link>\n      <Link css={{ marginLeft: \"3px\" }}>Teach on Udemy</Link>\n      <LinkIcon css={{ margin: \"0 12px\" }}>\n        <FaShoppingCart size={\"1.1em\"} />\n      </LinkIcon>\n      {!loading && !error && !data.currentUser && (\n        <Row>\n          <ButtonOutline\n            css={{ marginLeft: \"4px\" }}\n            onClick={setIsOpenLogIn.bind(null, true)}\n          >\n            Log In\n          </ButtonOutline>\n          <ButtonFilled\n            css={{ marginLeft: \"4px\" }}\n            onClick={setIsOpenSignUp.bind(null, true)}\n          >\n            Sign Up\n          </ButtonFilled>\n        </Row>\n      )}\n      {!loading && !error && data.currentUser && (\n        <Row css={{ alignItems: \"center\" }}>\n          {data.currentUser.name}\n          <ButtonFilled css={{ marginLeft: \"12px\" }} onClick={logout}>\n            Log Out\n          </ButtonFilled>\n        </Row>\n      )}\n      {isOpenSignUp && (\n        <SignUp\n          onClose={setIsOpenSignUp.bind(null, false)}\n          onSuccess={onSignUpSuccess}\n        />\n      )}\n      {isOpenLogIn && (\n        <LogIn\n          onClose={setIsOpenLogIn.bind(null, false)}\n          onSuccess={onLogInSuccess}\n        />\n      )}\n    </Column>\n  );\n};\n\nexport default TopBar;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nconst Head: React.FC = () => {\n  return (\n    <Helmet>\n      <title>Online Courses - Learn Anything, Anywhere | Udemy</title>\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        href=\"https://www.udemy.com/staticx/udemy/images/v6/favicon-196x196.png\"\n        sizes=\"196x196\"\n      ></link>\n    </Helmet>\n  );\n};\n\nexport default Head;\n","import React, { HTMLAttributes } from \"react\";\nimport Base from \"../Base\";\n\nconst Text: React.FC<HTMLAttributes<HTMLElement>> = ({\n  children,\n  css,\n  ...props\n}) => {\n  return (\n    <Base\n      element=\"span\"\n      css={{\n        ...(css as any)\n      }}\n      {...props}\n    >\n      {children}\n    </Base>\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nimport Column from \"./components/Column\";\nimport TopBar from \"./TopBar\";\nimport Head from \"./Head\";\nimport Text from \"./components/Text\";\nimport Row from \"./components/Row\";\nimport Input from \"./components/Input\";\nimport { FaSearch, FaAd } from \"react-icons/fa\";\nimport { Theme } from \"./Theme\";\nimport { useTheme } from \"emotion-theming\";\n\nconst App: React.FC = () => {\n  const theme: Theme = useTheme();\n  return (\n    <>\n      <Head />\n      <Column css={{ backgroundColor: \"lightgrey\", minHeight: \"100vh\" }}>\n        <TopBar />\n        <Column\n          css={{\n            backgroundImage:\n              \"url(https://i.udemycdn.com/notices/home_banner/image/048e0cdc-3e71-47dc-ae30-e9ac7a3504b5.jpg)\",\n            height: \"500px\",\n            justifyContent: \"center\",\n            padding: \"0 24px\"\n          }}\n        >\n          <Column css={{ width: \"500px\" }}>\n            <Text css={{ fontSize: \"2.5rem\", color: \"white\", fontWeight: 600 }}>\n              Learn on your schedule\n            </Text>\n            <Row css={{ margin: \"20px 0\" }}>\n              <Text\n                css={{ fontSize: \"1.2rem\", color: \"white\", lineHeight: \"1.5\" }}\n              >\n                Study any topic, anytime. Choose from thousands of expert-led\n                courses now.\n              </Text>\n            </Row>\n            <Row\n              css={{\n                flexGrow: 1,\n                alignItems: \"stretch\",\n                boxSizing: \"border-box\"\n              }}\n            >\n              <Input\n                placeholder=\"What do you want to learn?\"\n                css={{\n                  padding: \"14px 12px\",\n                  boxSizing: \"border-box\",\n                  fontSize: \"20px\",\n                  flexGrow: 1,\n                  border: 0,\n                  backgroundColor: \"white\",\n                  borderTopLeftRadius: \"2px\",\n                  borderBottomLeftRadius: \"2px\"\n                }}\n              />\n              <Column\n                css={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  color: theme.colors.primary,\n                  backgroundColor: \"white\",\n                  borderTopRightRadius: \"2px\",\n                  borderBottomRightRadius: \"2px\",\n                  \"&:hover\": {\n                    color: \"white\",\n                    backgroundColor: theme.colors.primary\n                  },\n                  padding: \"0 16px\"\n                }}\n              >\n                <FaSearch size={\"1em\"} />\n              </Column>\n            </Row>\n          </Column>\n        </Column>\n        <Row\n          css={{\n            height: 85,\n            background: \"linear-gradient(-45deg,#EC5252 0%,#6E1A52 100%)\"\n          }}\n        >\n          <Row\n            css={{\n              color: \"white\",\n              alignItems: \"center\",\n              flexGrow: 1,\n              justifyContent: \"center\"\n            }}\n          >\n            <Column>\n              <FaAd size={30} />\n            </Column>\n            <Column css={{ padding: \"0 12px\" }}>\n              <Text css={{ fontWeight: \"bold\", fontSize: 17 }}>\n                100,000 online courses\n              </Text>\n              <Text css={{ fontSize: 15 }}>\n                Explore a variety of fresh topics\n              </Text>\n            </Column>\n          </Row>\n          <Row\n            css={{\n              color: \"white\",\n              alignItems: \"center\",\n              flexGrow: 1,\n              justifyContent: \"center\"\n            }}\n          >\n            <Column>\n              <FaAd size={30} />\n            </Column>\n            <Column css={{ padding: \"0 12px\" }}>\n              <Text css={{ fontWeight: \"bold\", fontSize: 17 }}>\n                Expert instruction\n              </Text>\n              <Text css={{ fontSize: 15 }}>\n                Find the right instructor for you\n              </Text>\n            </Column>\n          </Row>\n          <Row\n            css={{\n              color: \"white\",\n              alignItems: \"center\",\n              flexGrow: 1,\n              justifyContent: \"center\"\n            }}\n          >\n            <Column>\n              <FaAd size={30} />\n            </Column>\n            <Column css={{ padding: \"0 12px\" }}>\n              <Text css={{ fontWeight: \"bold\", fontSize: 17 }}>\n                Lifetime access\n              </Text>\n              <Text css={{ fontSize: 15 }}>Learn on your schedule</Text>\n            </Column>\n          </Row>\n        </Row>\n      </Column>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient } from \"apollo-boost\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport { Theme } from \"./Theme\";\n\nconst httpLink = createHttpLink({\n  uri: `${\n    process.env.NODE_ENV !== \"production\" ? \"http://localhost:8080\" : \"\"\n  }/graphql`\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nconst theme: Theme = {\n  colors: {\n    primary: \"#ec5252\",\n    fade: \"lightgray\"\n  }\n};\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}